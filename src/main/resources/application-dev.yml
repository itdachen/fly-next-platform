# 端口配置
server:
  port: 8085
  servlet:
    context-path: /fly
    session:
      #会话过期时间默认是30m过期,最少为1分钟, 单位: 秒
      timeout: 18000

# 日志配置
logging:
  config: classpath:fly.xml
  level:
    com.github.itdachen: debug
    cn.jay.repository: trace
    org.springframework: warn
  file:
    path: ./logs # 配置日志打印目录,默认名称为:spring.log
    name: ./logs/fly_next.log # 配置日志打印目录和名称,和上面的path选一即可

fly:
  app:
    app-id: 4F17C3ED134AD4DA5C830DE9F3D7C02D
    app-name: FLY-NEXT-ADMIN
    ask-uri: http://127.0.0.1:${server.port}${server.servlet.context-path}
  # 数据库加密配置
  datasource:
    encoder: NOOP
  # 文件上传
  oss:
    ## 文件上传类型: LOCAL-本地服务存储; ALI-阿里云存储服务器, 默认是 LOCAL
    type: LOCAL
    local:
      localHttp: http://127.0.0.1:8080
      diskFolder: D:/upload/
    ali:
      endpoint: oss-cn-chengdu.aliyuncs.com
      access-key-id: 123
      access-key-secret: 123
      bucket: itdachen

  # 安全认证配置
  security:
    signInPage: /login # 登录页面地址
    signOutUrl: /login # 退出登录成功之后跳转地址
    successForwardUrl: /index # 登录成功后跳转地址
    session:
      sessionInvalidUrl: /login # 登录失效后跳转地址
    matchers:  # 不需要登录认证拦截地址
      - /open/**

spring:
  application:
    name: next-admin
  main:
    allow-circular-references: true
    allow-bean-definition-overriding: true
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

  mvc:
    pathmatch:
      # 使用Ant风格的路径匹配器
      matching-strategy: ant_path_matcher
  web:
    resources:
      # 静态文件地址，保留官方内容后，进行追加
      static-locations: classpath:/static,classpath:/markdown,classpath:/public,classpath:/resources,classpath:/view,classpath:/META-INF/resources


  datasource:
    name: mysql
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://127.0.0.1:3306/fly_next_admin?useUnicode=true&characterEncoding=UTF8&createDatabaseIfNotExist=true&useUnicode=true&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&allowMultiQueries=true
    username: root
    password: root
    druid:
      # 初始化时建立物理连接的个数
      initial-size: 5
      # 连接池的最小空闲数量
      min-idle: 5
      # 连接池最大连接数量
      max-active: 20
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 既作为检测的间隔时间又作为testWhileIdel执行的依据
      time-between-eviction-runs-millis: 60000
      # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接(配置连接在池中的最小生存时间)
      min-evictable-idle-time-millis: 30000
      # 用来检测数据库连接是否有效的sql 必须是一个查询语句(oracle中为 select 1 from dual)
      validation-query: SELECT 1 FROM DUAL
      # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存preparedStatement, 也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
      pool-prepared-statements: false
      # 置监控统计拦截的filters，去掉后监控界面sql无法统计，stat: 监控统计、Slf4j:日志记录、waLL: 防御sqL注入
      filters: stat,wall,slf4j
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: -1
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      web-stat-filter:
        # 是否启用StatFilter默认值true
        enabled: true
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤的格式
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico
      stat-view-servlet:
        # 是否启用StatViewServlet默认值true
        enabled: true
        # 访问路径为/druid时，跳转到StatViewServlet
        url-pattern: /druid/*
        # 是否能够重置数据
        reset-enable: false
        # 需要账号密码才能访问控制台，默认为root
        login-username: admin
        login-password: admin
        # IP白名单
        # allow: 127.0.0.1
        # IP黑名单（共同存在时，deny优先于allow）
        # deny:

  thymeleaf:
    mode: HTML5
    cache: false
    encoding: utf-8

  session:
    timeout: 18000
    redis:
      namespace: fly:next

  data:
    redis:
      host: 127.0.0.1
      port: 6379
      database: 0
      timeout: 1800s # 使用时间格式化
      lettuce:
        pool:
          max-active: 20  # 最大连接数
          max-wait: -1    # 最大阻塞等待时间(负数表示没限制)
          max-idle: 5     # 最大空闲
          min-idle: 0     # 最小空闲

# mybatis
mybatis:
  type-aliases-package: com.github.itdachen.**.vo
  mapperLocations: classpath*:mapper/**/*.xml
  configuration:
    map-underscore-to-camel-case: true
    call-setters-on-nulls: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# 分页工具
pagehelper:
  helperDialect: mysql
  reasonable: false
  supportMethodsArguments: true
  params: count=countSql