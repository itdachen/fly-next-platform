<template>
    <dialog-popup :title="dialog.title"
                  :visible="dialog.visible"
                  :width="dialog.width"
                  :height="dialog.height"
                  :showSubmit="dialog.showSubmit"
                  @onClose="onClose()"
                  @onConfirm="confirm()">
        <template v-slot:content>
            <el-form :model="${className}"
                     ref="formRef"
                     :rules="rules"
                     :disabled="isDisabled"
                     label-width="120px">

                #foreach($column in $columns)
                    #set($field=$column.javaField)
                    #if($column.isForm == '1')

                            #set($parentheseIndex=$column.columnComment.indexOf("（"))
                            #if($parentheseIndex != -1)
                                #set($comment=$column.columnComment.substring(0, $parentheseIndex))
                            #else
                                #set($comment=$column.columnComment)
                            #end
                            #set($dictType=$column.dictType)
                            #if($column.htmlType == "input")
                                <el-form-item label="${comment}" prop="${field}">
                                    <el-input v-model="${className}.${field}" placeholder="请输入${comment}"/>
                                </el-form-item>
                            #elseif($column.htmlType == "imageUpload")
                                <el-form-item label="${comment}">
                                    <image-upload v-model="${className}.${field}"/>
                                </el-form-item>
                            #elseif($column.htmlType == "fileUpload")
                                <el-form-item label="${comment}">
                                    <file-upload v-model="${className}.${field}"/>
                                </el-form-item>
                            #elseif($column.htmlType == "editor")
                                <el-form-item label="${comment}">
                                    <editor v-model="${className}.${field}" :min-height="192"/>
                                </el-form-item>
                            #elseif($column.htmlType == "select" && "" != $dictType)
                                <el-form-item label="${comment}" prop="${field}">
                                    <el-select v-model="${className}.${field}" placeholder="请选择${comment}">
                                        <el-option
                                                v-for="dict in dict.type.${dictType}"
                                                :key="dict.value"
                                                :label="dict.label"
                                                #if($column.javaType == "Integer" || $column.javaType == "Long"):value="parseInt(dict.value)"
                                                #else:value="dict.value"#end ></el-option>
                                    </el-select>
                                </el-form-item>
                            #elseif($column.htmlType == "select" && $dictType)
                                <el-form-item label="${comment}" prop="${field}">
                                    <el-select v-model="${className}.${field}" placeholder="请选择${comment}">
                                        <el-option label="请选择字典生成" value=""/>
                                    </el-select>
                                </el-form-item>
                            #elseif($column.htmlType == "checkbox" && "" != $dictType)
                                <el-form-item label="${comment}">
                                    <el-checkbox-group v-model="${className}.${field}">
                                        <el-checkbox v-for="dict in dict.type.${dictType}"
                                                     :key="dict.value"
                                                     :label="dict.value">
                                            {{dict.label}}
                                        </el-checkbox>
                                    </el-checkbox-group>
                                </el-form-item>
                            #elseif($column.htmlType == "checkbox" && $dictType)
                                <el-form-item label="${comment}">
                                    <el-checkbox-group v-model="${className}.${field}">
                                        <el-checkbox>请选择字典生成</el-checkbox>
                                    </el-checkbox-group>
                                </el-form-item>
                            #elseif($column.htmlType == "radio" && "" != $dictType)
                                <el-form-item label="${comment}">
                                    <el-radio-group v-model="${className}.${field}">
                                        <el-radio v-for="dict in dict.type.${dictType}"
                                                  :key="dict.value"
                                                  #if($column.javaType == "Integer" || $column.javaType ==
                                                      "Long"):label="parseInt(dict.value)"#else:label="dict.value"#end
                                        >{{dict.label}}
                                        </el-radio>
                                    </el-radio-group>
                                </el-form-item>
                            #elseif($column.htmlType == "radio" && $dictType)
                                <el-form-item label="${comment}">
                                    <el-radio-group v-model="${className}.${field}">
                                        <el-radio label="1">请选择字典生成</el-radio>
                                    </el-radio-group>
                                </el-form-item>
                            #elseif($column.htmlType == "datetime")
                                <el-form-item label="${comment}" prop="${field}">
                                    <el-date-picker clearable
                                                    v-model="${className}.${field}"
                                                    type="date"
                                                    value-format="yyyy-MM-dd"
                                                    placeholder="请选择${comment}">
                                    </el-date-picker>
                                </el-form-item>
                            #elseif($column.htmlType == "textarea")
                                <el-form-item label="${comment}" prop="${field}">
                                    <el-input v-model="${className}.${field}" type="textarea" maxlength="100" placeholder="${comment}"/>
                                </el-form-item>
                            #end
                        #end
                    #end

            </el-form>
        </template>
    </dialog-popup>
</template>

<script setup lang="ts" name="Ref${ClassName}">
    import {ref} from 'vue'
    import DialogPopup from '@/components/dialog/DialogPopup.vue'
    import useDialog from "@/components/dialog/DialogPopup";
    import {DialogTypeEnum} from "@/components/dialog/Dialog";
    import resetForm from "@/utils/resetForm";
    import objCopy from "@/utils/objCoppy";
    import {ElForm} from "element-plus/es";
    import { ${ClassName} } from "@/api/${moduleName}/model/${ClassName}Model";
    import use${ClassName}Composable from "@/composables/${moduleName}/${ClassName}Composable";

    const {
        ${className},
        rules
    } = use${ClassName}Composable();

    //弹框属性
    const {dialog, onShow, onClose} = useDialog();

    //表单的ref属性
    const formRef = ref<InstanceType<typeof ElForm>>();

    const isDisabled = ref<boolean>(false);

    /**
     * 弹框展示(当成组件使用)
     * @param type
     * @param data
     */
    const show = (type: DialogTypeEnum, data?: ${ClassName}) => {
        //设置弹框的属性
        dialog.height = '500px'
        dialog.width = '800px'
        dialog.title = type + '${comments}';
        /* 清空表单内容 */
        resetForm(formRef.value, ${className});
        if (undefined !== data && null !== data) {
            /* 新表单赋值 */
            objCopy(data, ${className})
        }
        if (DialogTypeEnum.SAVE === type || DialogTypeEnum.UPDATE === type) {
            dialog.showSubmit = true
            isDisabled.value = false
        }
        if (DialogTypeEnum.VIEW === type) {
            dialog.showSubmit = false
            isDisabled.value = true
        }

        onShow();
    }

    //定义事件
    const emits = defineEmits(['submit'])

    const confirm = () => {
        formRef.value?.validate(valid => {
            //验证通过，才提交表单
            if (valid) {
                emits('submit', ${className})
            }
        })
    }

    defineExpose({
        show,
        onClose
    })


</script>

<style scoped>

</style>