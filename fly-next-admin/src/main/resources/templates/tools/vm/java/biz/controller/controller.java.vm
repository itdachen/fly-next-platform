package ${package}.controller;

import ${package}.service.I${ClassName}Service;
import ${package}.entity.${ClassName};
import ${package}.sdk.query.${ClassName}Query;
import ${package}.sdk.vo.${ClassName}Vo;
import com.github.itdachen.framework.context.annotation.CheckApiClient;
import com.github.itdachen.framework.core.constants.ClientConstant;
import com.github.itdachen.framework.webmvc.controller.BizController;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;

/**
 * ${functionName}
 *
 * @author ${author}
 * @date ${datetime}
 */
@Controller
@RequestMapping("${menuUrl}")
@CheckApiClient(title = "${functionName}", clientId = ClientConstant.CLIENT_WEB)
public class ${ClassName}Controller extends BizController< I${ClassName}Service, ${ClassName}, ${ClassName}Vo, ${ClassName}Query, ${primaryKey} > {
    private static final Logger logger = LoggerFactory.getLogger(${ClassName}Controller.class);
    private static final String PATH_PREFIX = "${pathPrefix}";

    /***
     * 跳转到信息管理界面
     *
     * @author ${author}
     * @date ${datetime}
     * @return java.lang.String
     */
    @GetMapping(value = "/index")
    @PreAuthorize("hasAuthority('${permsPrefix}:index')")
    public String index() {
        return PATH_PREFIX + "/index";
    }

    /***
     * 跳转到添加页面
     *
     * @author ${author}
     * @date ${datetime}
     * @return java.lang.String
     */
    @GetMapping(value = "/add")
    @PreAuthorize("hasAuthority('${permsPrefix}:save')")
    public String add() {
        return PATH_PREFIX + "/add";
    }

    /***
     * 跳转到修改页面
     *
     * @author ${author}
     * @date ${datetime}
     * @param id         需要修改数据的id
     * @param modelMap   modelMap
     * @return java.lang.String
     */
    @GetMapping(value = "/edit/{id}")
    @PreAuthorize("hasAuthority('${permsPrefix}:update')")
    public String edit(@PathVariable("id") String id, ModelMap modelMap) throws Exception {
        modelMap.put("${className}", bizService.getById(id));
        return PATH_PREFIX + "/edit";
    }

    /***
     * 跳转到查看页面
     *
     * @author ${author}
     * @date  ${datetime}
     * @param id          需要查看数据的id
     * @param modelMap    modelMap
     * @return java.lang.String
     */
    @GetMapping(value = "/view/{id}")
    @PreAuthorize("hasAuthority('${permsPrefix}:view')")
    public String view(@PathVariable("id") String id, ModelMap modelMap) throws Exception {
        modelMap.put("${className}", bizService.getById(id));
        return PATH_PREFIX + "/view";
    }

}